name: xyloswitch
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.7.2

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.8
  cached_network_image: ^3.4.1
  fluttericon: ^2.0.0
  google_fonts: ^6.3.0
  webview_flutter: ^4.7.0
  ui_common:
    git: https://github.com/brocodev/ui_common.git
  firebase_core: ^4.0.0
  firebase_auth: ^6.0.1
  fl_chart: ^0.60.0
  vector_math: 2.1.4
  google_sign_in: ^7.2.0

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^5.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/
    - assets/images/logo.png
  #   - images/a_dot_ham.jpegimport 'package:flutter/material.dart';
  #import 'package:firebase_auth/firebase_auth.dart';
  #
  #class AuthService extends ChangeNotifier {
  #  final FirebaseAuth _auth = FirebaseAuth.instance;
  #
  #  bool _isAuthenticated = false;
  #  String? _userEmail;
  #
  #  bool get isAuthenticated => _isAuthenticated;
  #  String? get userEmail => _userEmail;
  #
  #  // ðŸ”¹ LOGIN
  #  Future<bool> login(String email, String password) async {
  #    try {
  #      await _auth.signInWithEmailAndPassword(email: email, password: password);
  #
  #      _isAuthenticated = true;
  #      _userEmail = email;
  #      notifyListeners();
  #      return true;
  #    } on FirebaseAuthException catch (e) {
  #      debugPrint("Login error: ${e.message}");
  #      return false;
  #    }
  #  }
  #
  #  // ðŸ”¹ LOGOUT
  #  Future<void> logout() async {
  #    await _auth.signOut();
  #
  #    _isAuthenticated = false;
  #    _userEmail = null;
  #    notifyListeners();
  #  }
  #
  #  // ðŸ”¹ SIGNUP
  #  Future<bool> signup({
  #    required String houseName,
  #    required String fullName,
  #    required String email,
  #    required String contact,
  #    required String password,
  #  }) async {
  #    try {
  #      await _auth.createUserWithEmailAndPassword(
  #          email: email, password: password);
  #
  #      // TODO: Save houseName, fullName, contact â†’ in Firestore (not Auth)
  #      _isAuthenticated = true;
  #      _userEmail = email;
  #      notifyListeners();
  #      return true;
  #    } on FirebaseAuthException catch (e) {
  #      debugPrint("Signup error: ${e.message}");
  #      return false;
  #    }
  #  }
  #
  #  // ðŸ”¹ RESET PASSWORD
  #  Future<bool> resetPassword(String email) async {
  #    try {
  #      await _auth.sendPasswordResetEmail(email: email);
  #      return true;
  #    } on FirebaseAuthException catch (e) {
  #      debugPrint("Reset password error: ${e.message}");
  #      return false;
  #    }
  #  }
  #
  #  // ðŸ”¹ AUTO LOGIN CHECK (Optional)
  #  void checkAuthState() {
  #    final user = _auth.currentUser;
  #    if (user != null) {
  #      _isAuthenticated = true;
  #      _userEmail = user.email;
  #    } else {
  #      _isAuthenticated = false;
  #      _userEmail = null;
  #    }
  #    notifyListeners();
  #  }
  #}

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package
